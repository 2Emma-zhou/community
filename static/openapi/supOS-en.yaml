openapi: 3.0.1
info:
  title: supOS-CE
  description: "Open API Documentation"
  license:
    name: "Apache 2.0"
    url: "https://springdoc.org"
  version: 1.0.0
tags:
  - name: Path/Topic Management
  - name: Template Management
  - name: Label Management
  - name: User Management
  - name: To-Do Center
  - name: Health Check
paths:
  /open-api/uns/folder/schema:
    get:
      summary: Get path schema/metadata structure
      deprecated: false
      description: Path schema/definition structure
      tags:
        - Path/Topic Management
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/file/schema:
    get:
      summary: Get topic schema/metadata structure
      deprecated: false
      description: Topic schema/definition structure
      tags:
        - Path/Topic Management
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/folder/{alias}:
    get:
      summary: Get path details by alias
      deprecated: false
      description: Get detailed path information based on path alias.
      operationId: getModelDefinition
      tags:
        - Path/Topic Management
      parameters:
        - name: alias
          in: path
          description: Alias
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 63
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: Error code, 200--normal, others--failed
                    format: int32
                  msg:
                    type: string
                    description: Error message
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ID
                      name:
                        type: string
                        description: Name
                        minLength: 1
                        maxLength: 63
                      displayName:
                        type: string
                        description: Display name
                        maxLength: 128
                      alias:
                        type: string
                        description: Alias
                      parentAlias:
                        type: string
                        description: Parent path alias
                      path:
                        type: string
                        description: Full path
                      pathName:
                        type: string
                        description: Path name
                      description:
                        type: string
                        description: Model description
                      definition:
                        type: array
                        description: Field definition
                        items:
                          $ref: '#/components/schemas/FieldDefine'
                      extendProperties:
                        type: object
                        additionalProperties:
                          type: object
                          description: Extended field JSON
                        description: Extended properties
                        properties: {}
                      templateAlias:
                        type: string
                        description: Associated template alias
                      updateTime:
                        type: integer
                        description: Update time(ms)
                        format: int64
                      createTime:
                        type: integer
                        description: Creation time(ms)
                        format: int64
                required:
                  - data
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/file/{alias}:
    get:
      summary: Get topic details by alias
      deprecated: false
      description: Get topic details by alias.
      operationId: getInstanceDetail
      tags:
        - Path/Topic Management
      parameters:
        - name: alias
          in: path
          description: Alias
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 63
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: Error code, 0--normal, others--failed
                    format: int32
                  msg:
                    type: string
                    description: Error message
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Topic ID
                      name:
                        type: string
                        description: Topic name
                      displayName:
                        type: string
                        description: Display name
                      alias:
                        type: string
                        description: Alias
                      parentAlias:
                        type: string
                        description: Parent path alias
                      path:
                        type: string
                        description: Full path
                      dataType:
                        type: integer
                        description: 1--time series, 2--relational, 3--computed, 6--aggregated 7--reference
                        format: int32
                      pathType:
                        type: integer
                        description: Topic type 0--path, 2--topic
                        format: int32
                      definition:
                        type: array
                        description: Field definition
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: Field name starts with a letter, supports letters, numbers and underscores, cannot exceed 63 characters.
                            type:
                              type: string
                              description: >-
                                Field type: INTEGER, LONG, FLOAT, DOUBLE, BOOLEAN,
                                DATETIME, STRING
                            unique:
                              type: boolean
                              description: Whether it is unique constraint. Invalid when creating new template
                            index:
                              type: string
                              description: Key of corresponding protocol field. Invalid when creating new template
                            displayName:
                              type: string
                              description: Display name
                            remark:
                              type: string
                              description: Remark
                            maxLen:
                              type: integer
                              description: Maximum length (valid for string type of field)
                              format: int32
                            systemField:
                              type: boolean
                              description: Whether it is system parameter. Invalid when creating new template
                          required:
                            - name
                            - type
                      description:
                        type: string
                        description: Description
                      persistence:
                        type: boolean
                        description: Whether to store history
                      expression:
                        type: string
                        description: Expression. E.g."$\"1968194499044282368\".actualRuntime#", "1968194499044282368" is the referenced topic ID
                      frequency:
                        type: string
                        description: >-
                          Aggregation frequency. The calculation interval for aggregation type(dataType=6). Unit: Second/minute/hour. E.g. 3m
                      showExpression:
                        type: string
                        description: Expression for display. E.g."$\"Equipment/CNC\".actualRuntime#", "Equipment/CNC" is the referenced topic
                      refers:
                        type: array
                        description: Reference objects
                        items:
                          $ref: '#/components/schemas/refres'
                      pathName:
                        type: string
                        description: Topic path name
                      templateAlias:
                        type: string
                        description: Referenced template alias
                      extendProperties:
                        type: object
                        additionalProperties:
                          type: object
                          description: Extended field JSON
                        description: Extended properties
                        properties: {}
                      updateTime:
                        type: integer
                        description: Update time(ms)
                        format: int64
                      createTime:
                        type: integer
                        description: Creation time(ms)
                        format: int64
                    required:
                      - frequency
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/folder/byPath:
    get:
      summary: Get path details by directory
      deprecated: false
      description: Get path details by directory
      operationId: folderDetailByPath
      tags:
        - Path/Topic Management
      parameters:
        - name: path
          in: query
          description: ''
          required: false
          example: Path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: Error code, 200--normal, others--failed
                    format: int32
                  msg:
                    type: string
                    description: Error message
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ID
                      alias:
                        type: string
                        description: Alias
                      parentAlias:
                        type: string
                        description: Parent path alias
                      path:
                        type: string
                        description: Full path
                      definition:
                        type: array
                        description: Field definition
                        items:
                          $ref: '#/components/schemas/FieldDefine'
                      description:
                        type: string
                        description: Model description
                      name:
                        type: string
                        description: Name
                      displayName:
                        type: string
                        description: Display name
                      pathName:
                        type: string
                        description: Path name
                      extendProperties:
                        type: object
                        additionalProperties:
                          type: object
                          description: Extended field JSON
                        description: Extended properties
                        properties: {}
                      templateAlias:
                        type: string
                        description: Associated template alias
                      updateTime:
                        type: integer
                        description: Update time(ms)
                        format: int64
                      createTime:
                        type: integer
                        description: Creation time(ms)
                        format: int64
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/file/byPath:
    get:
      summary: Get topic details by path
      deprecated: false
      description: Get topic details by path.
      operationId: fileDetailByPath
      tags:
        - Path/Topic Management
      parameters:
        - name: path
          in: query
          description: ''
          required: false
          example: Path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: Error code, 0--normal, others--failed
                    format: int32
                  msg:
                    type: string
                    description: Error message
                  data:
                    $ref: '#/components/schemas/InstanceDetail'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/condition/tree:
    post:
      summary: Get paginated tree structure
      deprecated: false
      description: Get paginated UNS tree structure by conditions. Lazy load pattern. Returns single-level hierarchy.
      operationId: searchTreeByCondition
      tags:
        - Path/Topic Management
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pageNo:
                  minimum: 1
                  type: integer
                  description: Current page number. Default is 1
                  format: int64
                pageSize:
                  minimum: 1
                  type: integer
                  description: Records per page. Default is 20. Cannot exceed 1000.
                  format: int64
                searchType:
                  type: integer
                  format: int32
                  description: "Query type: 1-Text 2-With tags 3-With template"
                keyword:
                  type: string
                  description: "Searching keyword: Path name or alias"
                dataType:
                  type: integer
                  description: "Data type: 1--time series, 2--relational, 3--computed, 6--aggregated 7--reference"
                parentId:
                  type: integer
                  description: Parent ID. Can be Empty.  0 gets top-level node and empty value gets all
              required:
                - searchType
            examples: {}
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  pageNo:
                    type: integer
                    description: Current page number
                    format: int64
                  pageSize:
                    type: integer
                    description: Records per page
                    format: int64
                  total:
                    type: integer
                    format: int64
                  code:
                    type: integer
                    format: int64
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: ID
                        alias:
                          type: string
                          description: Alias
                        parentId:
                          type: string
                          description: Directory ID
                        parentAlias:
                          type: string
                          description: Directory alias
                        pathType:
                          type: integer
                          description: "Path type: 0--Path, 2--Topic"
                          format: int32
                        name:
                          type: string
                          description: Name
                        path:
                          type: string
                          description: Tree path(full path)
                        pathName:
                          description: Topic path name
                        countChildren:
                          type: integer
                          description: Number of child nodes(topic).
                          format: int32
                        hasChildren:
                          type: boolean
                          description: Whether subpaths exist under the current path
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/file:
    post:
      summary: Create topic
      deprecated: false
      description: "Create topic. Batch creation not supported"
      operationId: createFile
      tags:
        - Path/Topic Management
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Topic name, consistent with path display name. Supports modification. Maximum length 63"
                  minLength: 1
                  maxLength: 63
                alias:
                  type: string
                  description: Topic alias. Maximum length 63 characters. Supports letters, numbers and underscores. If Empty, system automatically generates
                  maxLength: 63
                displayName:
                  description: "Topic display name. Support modification and duplication. Maximum length 128 characters"
                  type: string
                parentAlias:
                  type: string
                  description: Parent path alias
                  maxLength: 63
                dataType:
                  description: 1-Time series, 2-Relational, 3-Real-time calculation(only supports function), 6-Aggregate, 7-Reference.
                  type: integer
                description:
                  type: string
                  description: Topic description
                  maxLength: 255
                definition:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Field name. Starts with a letter, supports letters, numbers and underscores, maximum length 63 characters
                        minLength: 1
                        maxLength: 63
                      type:
                        type: string
                        description: >-
                          Field type: INTEGER, LONG, FLOAT, DOUBLE, BOOLEAN, DATETIME,
                          STRING
                      unique:
                        type: boolean
                        description: Whether it is unique constraint
                      displayName:
                        type: string
                        description: Display name
                        maxLength: 128
                      remark:
                        type: string
                        description: Remark
                        maxLength: 128
                      maxLen:
                        type: integer
                        description: Maximum length (valid for string type of field)
                      systemField:
                        type: boolean
                        description: Whether it is system parameter
                    required:
                      - name
                      - type
                  description: Field definition
                persistence:
                  description: Whether to store history. Default is false
                  type: boolean
                refers:
                  type: array
                  items:
                    properties:
                      alias:
                        type: string
                        description: Referenced topic alias
                      field:
                        type: string
                        description: Referenced field, required when dataType is Calculate
                      variableName:
                        type: string
                        description: Variable name used for topic calculation. a1, a2 in sequence
                    type: object
                    required:
                      - alias
                  description: Reference objects. Required when data type is Calculate/Aggregate/Reference
                expression:
                  type: string
                  description: >-
                    When dataType=3, specify expression. a1 is the first item in "refers", and a2 is the second, and so on. Can be empty or omitted, and will be processed as time series topic
                  maxLength: 255
                frequency:
                  type: string
                  description: "Aggregation frequency. The calculation interval for aggregation type(dataType=6). Unit: Second/minute/hour. E.g. 3m"
                  maxLength: 10
                extendProperties:
                  type: object
                  properties:
                    k1:
                      type: string
                    k2:
                      type: string
                  description: Topic extended attributes. Cannot exceed 3
                  required:
                    - k1
                    - k2
                  maxProperties: 3
                labelNames:
                  type: array
                  items:
                    type: string
                  description: "Label name array. Supports labeling while creating topic"
                templateAlias:
                  type: string
                  description: Associated template alias
                  maxLength: 63
                addFlow:
                  type: boolean
                  description: "Whether to add simulation data flow. Default is false"
                dashBoard:
                  type: boolean
                  description: "Whether to generate dashboard. Default is false"
              required:
                - name
                - dataType
            examples: {}
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    description: Status code 200-Success, 400-Parameter error, 500-Interface exception
                  msg:
                    type: string
                    description: Response message
                  data:
                    type: object
                    properties: {}
                    description: Response data
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/folder:
    post:
      summary: Create path
      deprecated: false
      description: "Create path. Batch creation not supported"
      operationId: createFolder
      tags:
        - Path/Topic Management
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name. Maximum length 63
                  maxLength: 63
                alias:
                  type: string
                  description: Alias. Combinations of letters and numbers. Maximum length 63. System automatically generates when left empty
                  maxLength: 63
                displayName:
                  type: string
                  description: Display name. Maximum length 128
                  maxLength: 128
                parentAlias:
                  type: string
                  description: Parent path alias. Empty means top level
                description:
                  type: string
                  description: Description. Maximum length 255
                  maxLength: 255
                definition:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Field name. Starts with a letter, supports letters, numbers and underscores. Cannot exceed 63 characters
                        maxLength: 63
                      type:
                        type: string
                        description: >-
                          Field type: INTEGER, LONG, FLOAT, DOUBLE, BOOLEAN, DATETIME,
                          STRING
                      unique:
                        type: boolean
                        description: Whether it is unique constraint, invalid when creating new template
                      index:
                        type: string
                        description: Key of corresponding protocol field, invalid when creating new template
                      displayName:
                        type: string
                        description: Display name
                        maxLength: 128
                      remark:
                        type: string
                        description: Remark
                        maxLength: 128
                      maxLen:
                        type: integer
                        description: Maximum length (valid for string type of field)
                        format: int32
                      systemField:
                        type: boolean
                        description: Whether it is system parameter, invalid when creating new template
                    required:
                      - name
                      - type
                  description: Field definition
                extendProperties:
                  type: object
                  properties: {}
                  description: Extended attributes. JSON key-value pairs. Cannot exceed 3
                templateAlias:
                  type: string
                  description: Associated template alias
                  maxLength: 63
              required:
                - name
            examples: {}
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    description: Status code. 200-Success, 400-Parameter error, 500-Interface exception
                  msg:
                    type: string
                    description: Response message
                  data:
                    type: object
                    properties: {}
                    description: Response data
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/file/detail/{alias}:
    put:
      summary: Modify topic
      deprecated: false
      description: Modify topic information
      operationId: updateFieldAndDesc
      tags:
        - Path/Topic Management
      parameters:
        - name: alias
          in: path
          description: ''
          required: true
          schema:
            type: string
            maxLength: 63
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                definition:
                  type: array
                  description: Field definition
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Field name. Starts with a letter, supports letters, numbers and underscores. Cannot exceed 63 characters
                        minLength: 1
                        maxLength: 63
                      type:
                        type: string
                        description: >-
                          Field type: INTEGER, LONG, FLOAT, DOUBLE, BOOLEAN, DATETIME,
                          STRING
                      unique:
                        type: boolean
                        description: Whether it is unique constraint, invalid when creating new template
                      displayName:
                        type: string
                        description: Display name
                        maxLength: 255
                      remark:
                        type: string
                        description: Remark
                        maxLength: 255
                      maxLen:
                        type: integer
                        description: Maximum length (valid for string type of field)
                        format: int32
                      systemField:
                        type: boolean
                        description: Whether it is system parameter, invalid when creating new template
                    required:
                      - name
                      - type
                description:
                  type: string
                  description: Description. Maximum length 255
                  maxLength: 255
                persistence:
                  type: boolean
                  description: Whether to store history
                expression:
                  type: string
                  description: Expression. E.g."$\"1968194499044282368\".actualRuntime#", "1968194499044282368" is the referenced topic ID
                  maxLength: 255
                frequency:
                  type: string
                  description: "Aggregation frequency. The calculation interval for aggregation type(dataType=6). Unit: Second/minute/hour. E.g. 3m"
                  maxLength: 255
                refers:
                  type: array
                  description: Reference objects
                  items:
                    type: object
                    properties:
                      alias:
                        type: string
                        description: Referenced file alias
                        maxLength: 63
                      field:
                        type: string
                        description: Referenced field, required when dataType is Calculate
                    required:
                      - alias
                name:
                  type: string
                  description: Topic name. Maximum length 63
                  maxLength: 63
                  minLength: 1
                displayName:
                  type: string
                  description: Display name. Maximum length 128
                  maxLength: 128
                templateAlias:
                  type: string
                  description: Referenced template alias
                  maxLength: 63
                extendProperties:
                  type: object
                  properties: {}
                  description: Extended attributes. Cannot exceed 3
                  additionalProperties:
                    type: object
                    description: Extended field JSON
                  maxProperties: 3
            examples: {}
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/folder/detail/{alias}:
    put:
      summary: Modify path
      deprecated: false
      description: Modify path information
      operationId: updateFolder
      tags:
        - Path/Topic Management
      parameters:
        - name: alias
          in: path
          description: Alias
          required: true
          schema:
            type: string
            maxLength: 63
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                definition:
                  type: array
                  description: Field definition
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Field name starts with a letter, supports letters, numbers and underscores, cannot exceed 63 characters.
                        minLength: 1
                        maxLength: 63
                      type:
                        type: string
                        description: >-
                          Field type: INTEGER, LONG, FLOAT, DOUBLE, BOOLEAN, DATETIME,
                          STRING
                      displayName:
                        type: string
                        description: Display name
                        maxLength: 255
                      remark:
                        type: string
                        description: Remark
                        maxLength: 255
                      maxLen:
                        type: integer
                        description: Maximum length (valid for string type of field)
                        format: int32
                    required:
                      - name
                      - type
                description:
                  type: string
                  description: Model description. Maximum length 255
                  maxLength: 255
                name:
                  type: string
                  description: Name. Maximum length 63
                  maxLength: 63
                  minLength: 1
                displayName:
                  type: string
                  description: Display name. Maximum length 128
                  maxLength: 128
                extendProperties:
                  type: object
                  additionalProperties:
                    type: object
                    description: Extended field JSON
                  description: Extended attributes. Cannot exceed 3
                  properties: {}
                templateAlias:
                  type: string
                  description: Associated template alias
                  maxLength: 63
            examples: {}
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/file/current/batchQuery:
    post:
      summary: Get topic real-time values in batches
      deprecated: false
      description: ''
      operationId: batchQueryFile_1
      tags:
        - Path/Topic Management
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: Alias array
            example:
              - AliasA
              - AliasB
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      AliasA:
                        type: object
                        properties:
                          value:
                            type: integer
                            description: Value
                          status:
                            description: Quality code, hexadecimal string
                            type: string
                          timeStamp:
                            type: integer
                            description: Timestamp
                        required:
                          - value
                          - status
                          - timeStamp
                        description: Queried topic aliasA
                      AliasB:
                        type: object
                        properties:
                          value:
                            type: string
                          status:
                            type: string
                          timeStamp:
                            type: integer
                        required:
                          - value
                          - status
                          - timeStamp
                        description: Queried topic aliasB
                    required:
                      - AliasA
                      - AliasB
                required:
                  - code
                  - message
                  - data
              example:
                code: 200
                message: ok
                data:
                  S6a5375b29c63516de6c2a82e9cbb113c:
                    value: 3
                    status: '0'
                    timeStamp: 1742173489221
                  S442713741e4cabd860907c5e42619409:
                    value: CONTROLLER
                    status: '0'
                    timeStamp: 1741842962256
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/file/batchUpdate:
    post:
      summary: Batch write topic real-time values
      deprecated: false
      description: ''
      operationId: batchUpdateFile
      tags:
        - Path/Topic Management
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateFileDTO'
            example:
              - alias: _monishujuwushan_df62c737229040839563
                data:
                  a: 566556
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/file/history/batch/query:
    post:
      summary: Get topic historical values in batches
      deprecated: false
      description: ''
      operationId: batchQueryFileHistoryValue_1
      tags:
        - Path/Topic Management
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoryValueRequest'
            examples: {}
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      results:
                        type: array
                        items:
                          type: object
                          properties:
                            alias:
                              description: Topic alias
                              type: string
                            function:
                              description: Aggregation function
                              type: string
                            hasNext:
                              description: Whether next page exists
                              type: boolean
                            fields:
                              type: array
                              items:
                                type: string
                              description: Field order. Must be followed.
                            datas:
                              type: array
                              items:
                                type: array
                                items:
                                  type: string
                              description: History dataset of the topic
                          required:
                            - alias
                            - function
                            - hasNext
                            - fields
                            - datas
                      "notExsistFiles\x05":
                        type: array
                        items:
                          type: string
                        description: Non-existent topic alias set
                    required:
                      - results
                      - "notExsistFiles\x05"
                required:
                  - code
                  - message
                  - data
              example:
                fill:
                  strategy: previous
                groupBy:
                  time: 5s,1s
                limit: 1000
                offset: 23
                order: DESC
                select:
                  - SAAAAAAAAAA
                  - first("SBBBBBBBBBB")
                where:
                  and:
                    "timeStamp":
                      ge: '2021-03-04T05:04:11Z'
                      gt: '2021-03-04T05:04:11Z'
                      le: '2021-03-04T05:14:11Z'
                      lt: '2021-03-04T05:14:11Z'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/file/current/batchQuery/byPath:
    post:
      summary: Get topic real-time values according to topic path in batches
      deprecated: false
      description: ''
      operationId: batchQueryFile_1_uns
      tags:
        - Path/Topic Management
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: Path array
            example:
              - a/b
              - a/b/c/d
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      AliasA:
                        type: object
                        properties:
                          value:
                            type: integer
                            description: Value
                          status:
                            description: Quality code, hexadecimal string
                            type: string
                          timeStamp:
                            type: integer
                            description: Timestamp
                        required:
                          - value
                          - status
                          - timeStamp
                        description: Queried topic aliasA
                      AliasB:
                        type: object
                        properties:
                          value:
                            type: string
                          status:
                            type: string
                          timeStamp:
                            type: integer
                        required:
                          - value
                          - status
                          - timeStamp
                        description: Queried topic aliasB
                    required:
                      - AliasA
                      - AliasB
                required:
                  - code
                  - message
                  - data
              example:
                code: 200
                message: ok
                data:
                  S6a5375b29c63516de6c2a82e9cbb113c:
                    value: 3
                    status: '0'
                    timeStamp: 1742173489221
                  S442713741e4cabd860907c5e42619409:
                    value: CONTROLLER
                    status: '0'
                    timeStamp: 1741842962256
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/template/schema:
    get:
      summary: Get template schema/Metadata structure
      deprecated: false
      description: Path schema/definition structure
      tags:
        - Template Management
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/template/{alias}:
    get:
      summary: Get template details
      deprecated: false
      description: ''
      operationId: templateDetail
      tags:
        - Template Management
      parameters:
        - name: alias
          in: path
          description: Alias
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 63
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVOTemplateVo'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    description: Status code. 200-Success, 400-Parameter error, 500-Interface exception
                  msg:
                    type: string
                    description: Response message
                  data:
                    description: Response data
                    $ref: '#/components/schemas/TemplateVo'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
    put:
      summary: Update template
      deprecated: false
      description: ''
      operationId: updateTemplate
      tags:
        - Template Management
      parameters:
        - name: alias
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Template name. Maximum length 63
                  maxLength: 63
                  minLength: 1
                description:
                  type: string
                  description: Template description. Maximum 255 characters
                definition:
                  type: array
                  description: Field definition
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: "Field name: starts with a letter. Supports letters, numbers and underscores. Maximum length 63"
                        maxLength: 63
                        minLength: 1
                      type:
                        type: string
                        description: >-
                          Field type: INTEGER, LONG, FLOAT, DOUBLE, BOOLEAN, DATETIME,
                          STRING
                      displayName:
                        type: string
                        description: Display name
                        maxLength: 255
                      remark:
                        type: string
                        description: Remark
                        maxLength: 255
                      maxLen:
                        type: integer
                        description: Maximum length (valid for string type of field)
                        format: int32
                    required:
                      - name
                      - type
            examples: {}
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
    delete:
      summary: Delete template
      deprecated: false
      description: ''
      operationId: deleteTemplate
      tags:
        - Template Management
      parameters:
        - name: alias
          in: path
          description: Template alias
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 63
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/template:
    get:
      summary: Get template list
      deprecated: false
      description: ''
      operationId: templatePageList
      tags:
        - Template Management
      parameters:
        - name: pageNo
          in: query
          description: Current page number
          required: true
          example: 1
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Records per page. Default is 20, Maximum is 1000
          required: true
          example: 20
          schema:
            type: integer
        - name: key
          in: query
          description: Keyword query. Template name supports fuzzy match
          required: false
          example: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResultDTOTemplateSearchResult'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
    post:
      summary: Create template
      deprecated: false
      description: ''
      operationId: createTemplate
      tags:
        - Template Management
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                alias:
                  type: string
                  description: "Alias, unique. Maximum length 63. Usable characters: a-zA-Z1-9_"
                  maxLength: 63
                  minLength: 1
                name:
                  type: string
                  description: Template name. Maximum length 63
                  maxLength: 63
                definition:
                  type: array
                  description: Field definition
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: "Field name: starts with a letter. Supports letters, numbers and underscores. Maximum length 63"
                        maxLength: 63
                        minLength: 1
                      type:
                        type: string
                        description: >-
                          Field type: INTEGER, LONG, FLOAT, DOUBLE, BOOLEAN, DATETIME,
                          STRING
                      displayName:
                        type: string
                        description: Display name
                        maxLength: 255
                      remark:
                        type: string
                        description: Remark
                        maxLength: 255
                      maxLen:
                        type: integer
                        description: Maximum length (valid for string type of field)
                        format: int32
                    required:
                      - name
                      - type
                description:
                  type: string
                  description: Template description, maximum 255 characters
                  maxLength: 255
              required:
                - definition
                - name
            examples: {}
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVOString'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/label/schema:
    get:
      summary: Get label schema/Metadata structure
      deprecated: false
      description: Path schema/Definition structure
      tags:
        - Label Management
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/label:
    get:
      summary: Get label list
      deprecated: false
      description: List all supported labels as dropdown options. Supports fuzzy search
      operationId: allLabels
      tags:
        - Label Management
      parameters:
        - name: pageNo
          in: query
          description: Current page number
          required: true
          example: 1
          schema:
            type: string
        - name: pageSize
          in: query
          description: Records per page. Default is 20. Maximum is 1000
          required: true
          example: 20
          schema:
            type: integer
        - name: key
          in: query
          description: Label name query. Supports fuzzy match
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  pageNo:
                    type: string
                    description: Current page number
                  pageSize:
                    type: string
                    description: Records per page
                  total:
                    type: string
                    description: Total records
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Label ID
                          format: int64
                        labelName:
                          type: string
                          description: Label name
                        createTime:
                          type: number
                          description: Creation time(ms)
                    description: LabelData
                required:
                  - pageNo
                  - pageSize
                  - total
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
    post:
      summary: Create label
      deprecated: false
      description: ''
      operationId: createLabel
      tags:
        - Label Management
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                labelName:
                  type: string
                  description: Label name. Only supports Chinese characters, letters, numbers, underscores (_) and hyphens (-). Maximum length 63
                  maxLength: 63
                  minLength: 1
              required:
                - labelName
            examples: {}
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    description: Status code. 200-Success, 400-Parameter error, 500-Interface exception
                  msg:
                    type: string
                    description: Response message
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Label ID
                      labelName:
                        type: string
                        description: Label name
                      createTime:
                        type: number
                        description: Creation time(ms)
                    description: Response data
                    required:
                      - id
                      - labelName
                      - createTime
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/label/{id}:
    get:
      summary: Get label details
      deprecated: false
      description: ''
      operationId: labelDetail
      tags:
        - Label Management
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Label ID
                      labelName:
                        type: string
                        description: Label name
                      createTime:
                        type: number
                        description: Creation time(ms)
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    description: Status code. 200-Success, 400-Parameter error, 500-Interface exception
                  msg:
                    type: string
                    description: Response message
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Label ID
                      labelName:
                        type: string
                        description: Label name
                      createAt:
                        type: integer
                        description: Creation time
                    description: Response data
                    required:
                      - id
                      - labelName
                      - createAt
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
    put:
      summary: Modify label
      deprecated: false
      description: ''
      operationId: updateLabel
      tags:
        - Label Management
      parameters:
        - name: id
          in: path
          description: Label ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                labelName:
                  type: string
                  description: Label name. Only supports Chinese characters, letters, numbers, underscores (_) and hyphens (-). Maximum length 63
                  minLength: 1
                  maxLength: 63
              required:
                - labelName
            examples: {}
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
    delete:
      summary: Delete label
      deprecated: false
      description: ''
      operationId: deleteLabel
      tags:
        - Label Management
      parameters:
        - name: id
          in: path
          description: Label ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/batch/makeLabel:
    post:
      summary: Label topics in batches
      deprecated: false
      description: ''
      operationId: makeLabel
      tags:
        - Label Management
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  fileAlias:
                    type: string
                    description: Topic alias
                    maxLength: 63
                    minLength: 1
                  labelNames:
                    type: array
                    items:
                      type: string
                      description: Label name. Maximum length 63
                      maxLength: 63
                    description: Label name array. System automatically generates when left empty
                required:
                  - fileAlias
                  - labelNames
            example: "[\r\n {\r\n \"fileAlias\": \"topic aliasA\",//topic alias\r\n \"labelNames\": [\r\n \"LabelA\",//Label name\r\n \"LabelB\"\r\n ]\r\n },\r\n {\r\n \"fileAlias\": \"Topic aliasB\",\r\n \"labelNames\": [\r\n \"LabelA\",\r\n \"LabelB\"\r\n ]\r\n }\r\n]"
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/uns/cancelLabel/{alias}:
    put:
      summary: Remove topic labels
      deprecated: false
      description: ''
      tags:
        - Label Management
      parameters:
        - name: alias
          in: path
          description: Topic alias
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: Label name. Maximum length 63
                maxLength: 63
              description: "Array of label names to be removed. Ignore when label name doesn't exist"
            example:
              - LabelA
              - Labelb
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/user/pageList:
    get:
      summary: User list
      deprecated: false
      description: ''
      operationId: openUserPageList
      tags:
        - User Management
      parameters:
        - name: pageNo
          in: query
          description: Current page number
          required: true
          example: 1
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Records per page. Default is 20, Maximum is 1000
          required: true
          example: 20
          schema:
            type: integer
            default: 20
        - name: username
          in: query
          description: Username. Exact match
          required: false
          example: zhangsan
          schema:
            type: string
        - name: displayName
          in: query
          description: Display name. Supports fuzzy match
          required: false
          example: Zhang San
          schema:
            type: string
        - name: email
          in: query
          description: Email. Supports fuzzy match
          required: false
          schema:
            type: string
            format: email
        - name: phone
          in: query
          description: Phone number. Supports fuzzy match
          required: false
          schema:
            type: string
        - name: enabled
          in: query
          description: Whether to enable
          required: false
          example: 'true'
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  pageNo:
                    type: integer
                    description: Current page number
                    format: int64
                  pageSize:
                    type: integer
                    description: Records per page
                    format: int64
                  total:
                    type: integer
                    format: int64
                  code:
                    type: integer
                    format: int64
                  data:
                    type: array
                    items:
                      $ref: >-
                        #/components/schemas/%E7%94%A8%E6%88%B7%E8%AF%A6%E6%83%85
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/user/{username}:
    get:
      summary: User details
      deprecated: false
      description: ''
      tags:
        - User Management
      parameters:
        - name: username
          in: path
          description: ''
          required: true
          example: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  email:
                    type: string
                    description: Email
                    example: xxx@supos.com
                  phone:
                    type: string
                    description: Phone number
                  username:
                    type: string
                    description: Username. English + numbers. 3-20 characters
                    minLength: 3
                    maxLength: 200
                    pattern: ^[\u4e00-\u9fa5a-zA-Z0-9_\-.@&+]*$
                  displayName:
                    type: string
                    description: Display name
                  roleList:
                    type: array
                    items:
                      type: object
                      properties:
                        roleName:
                          type: string
                          description: Role name
                        roleId:
                          type: string
                          description: Role ID
                      required:
                        - roleName
                        - roleId
                    description: Role list
                required:
                  - username
                  - roleList
                  - displayName
                $ref: '#/components/schemas/%E7%94%A8%E6%88%B7%E8%AF%A6%E6%83%85'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/todo:
    get:
      summary: Get paginated to-do information
      deprecated: false
      description: (OPEN-API)
      operationId: pageListByOpen
      tags:
        - To-Do Center
      parameters:
        - name: pageNo
          in: query
          description: Current page number
          required: true
          example: 1
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Records per page. Default is 20, Maximum is 1000
          required: true
          example: 20
          schema:
            type: integer
        - name: moduleCode
          in: query
          description: Module code
          required: false
          example: ''
          schema:
            type: boolean
        - name: status
          in: query
          description: "To-do state: 0-unhandled, 1-processed"
          required: false
          schema:
            type: integer
        - name: todoMsg
          in: query
          description: Task name. Supports fuzzy match
          required: false
          schema:
            type: string
        - name: handlerUsername
          in: query
          description: Handler username
          required: false
          example: ''
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResultDTOTodoVo'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
    post:
      summary: Create to-do
      deprecated: false
      description: ''
      operationId: createTodo
      tags:
        - To-Do Center
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username
                moduleCode:
                  type: string
                  description: Module code
                moduleName:
                  type: string
                  description: Module name
                todoMsg:
                  type: string
                  description: Task information
              required:
                - moduleCode
                - moduleName
                - todoMsg
                - username
            examples: {}
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/todo/handle:
    post:
      summary: Process to-do
      deprecated: false
      description: (OPEN-API)
      operationId: handle
      tags:
        - To-Do Center
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: To-do ID
                  format: int64
                username:
                  type: string
                  description: Handler username
              required:
                - id
                - username
            examples: {}
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/todo/moduleList:
    get:
      summary: Get the module list of to-do tasks
      deprecated: false
      description: (OPEN-API)
      operationId: getModuleList
      tags:
        - To-Do Center
      parameters: []
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVOSysModuleDto'
          headers: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
        '405':
          description: Method Not Allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultVO'
          headers: {}
      security:
        - apikey-header-apikey: []
  /open-api/health:
    get:
      summary: Detect platform health state
      deprecated: false
      description: Detect the running status of containers in the platform
      tags:
        - Health Check
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        description: "Running state: Running, stop"
                      overview:
                        type: object
                        properties:
                          total:
                            type: integer
                            description: Number of containers
                          running:
                            type: integer
                            description: Number of running containers
                          stop:
                            type: integer
                            description: Number of stopped containers
                        required:
                          - total
                          - running
                          - stop
                      container:
                        type: object
                        properties:
                          running:
                            type: array
                            items:
                              type: string
                            description: Name list of running containers
                          stop:
                            type: array
                            items:
                              type: string
                            description: Name list of stopped containers
                        required:
                          - running
                          - stop
                    required:
                      - status
                      - overview
                      - container
                required:
                  - data
              example:
                data:
                  status: running
                  overview:
                    total: 10
                    running: 10
                    stop: 0
                  container:
                    running:
                      - backend
                      - frontend
                    stop: []
                type: string
          headers: {}
      security:
        - apikey-header-apikey: []
components:
  schemas:
    ResultVO:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: Status code. 200-Success, 400-Parameter error, 500-Interface exception
        msg:
          type: string
          description: Response message
        data:
          type: object
          description: Response data
          properties:
            id:
              type: integer
              description: example ID
              example: 123
            name:
              type: string
              description: example name
              example: "demo"
          additionalProperties: true

    FieldDefine:
      required:
        - name
        - type
      type: object
      properties:
        name:
          type: string
          description: "Field name: starts with a letter, supports letters, numbers and underscores. Maximum length 63"
        type:
          type: string
          description: Field type(INTEGER, LONG, FLOAT, DOUBLE, BOOLEAN, DATETIME, STRING)
        unique:
          type: boolean
          description: Whether it is unique constraint, invalid when creating new template
        index:
          type: string
          description: Key of corresponding protocol field, invalid when creating new template
        displayName:
          type: string
          description: Display name
        remark:
          type: string
          description: Remark
        maxLen:
          type: integer
          description: Maximum length (valid for string type of field)
          format: int32
        systemField:
          type: boolean
          description: Whether it is system parameter, invalid when creating new template
      description: New field
    UpdateFileDTO:
      type: object
      properties:
        alias:
          type: string
          description: Topic alias
        data:
          type: object
          additionalProperties:
            type: object
            description: >-
              Field name, field value(key-value pairs). Date type: Timestamp, UTC Date format(2021-03-04T05:04:11Z、2021-04-06T16:00:00.000+08:00)
          description: >-
            Field name, field value(key-value pairs). Date type: Timestamp, UTC Date format(2021-03-04T05:04:11Z、2021-04-06T16:00:00.000+08:00)
          properties: {}
    PageResultDTOTodoVo:
      type: object
      properties:
        pageNo:
          type: integer
          description: Current page number
          format: int64
        pageSize:
          type: integer
          description: Records per page
          format: int64
        total:
          type: integer
          format: int64
        code:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: '#/components/schemas/TodoVo'
    TodoVo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: string
          description: Receiver user ID
        username:
          type: string
          description: Receiver username
        moduleCode:
          type: string
          description: Module code
        moduleName:
          type: string
          description: Module name
        status:
          type: integer
          format: int32
          description: "Todo state: 0-unhandled, 1-processed"
        todoMsg:
          type: string
          description: Task
        link:
          type: string
          description: Link
        handlerUserId:
          type: string
          description: Handler user ID
        handlerUsername:
          type: string
          description: Handler username
        handlerTime:
          type: string
          format: date-time
          description: Processing time
        createAt:
          type: string
          format: date-time
          description: Creation time
    TemplateQueryVo:
      type: object
      properties:
        pageNo:
          minimum: 1
          type: integer
          description: Current page number. Default is 1
          format: int64
        pageSize:
          minimum: 1
          type: integer
          description: Records per page. Default is 20, maximum is 1000
          format: int64
        key:
          type: string
          description: Search keyword
    PageResultDTOTemplateSearchResult:
      type: object
      properties:
        pageNo:
          type: integer
          description: Current page number
          format: int64
        pageSize:
          type: integer
          description: Records per page
          format: int64
        total:
          type: integer
          format: int64
          description: Total records
        code:
          type: integer
          format: int64
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Template ID
              name:
                type: string
                description: Template name
              description:
                type: string
                description: Model description
              alias:
                type: string
                description: Alias
    TemplateSearchResult:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: Template name
        description:
          type: string
          description: Model description
        alias:
          type: string
          description: Alias
    ResultVOString:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          type: string
    Fill:
      type: object
      properties:
        strategy:
          type: string
          description: Filling strategy. Supports none/previous/line
      description: Filling strategy object
    GroupBy:
      type: object
      properties:
        time:
          type: string
          description: Window configuration string, e.g. 5s, 1s
      description: Aggregation window configuration object
    HistoryValueRequest:
      type: object
      properties:
        fill:
          $ref: '#/components/schemas/Fill'
        groupBy:
          $ref: '#/components/schemas/GroupBy'
        limit:
          type: integer
          description: Maximum number of returned elements. Default is 1000, maximum is 10000
          format: int32
        offset:
          type: integer
          description: Offset. Start querying after specified number of records, e.g. offset=5 means start querying from 6th record
          format: int32
        order:
          type: string
          description: Sorting method. Optional values[ASC(ascending), DESC(descending)]
        select:
          type: array
          description: >-
            Queried field expression list, e.g.: topic alias 'SAxxx' or aggregation function 'first(SBxxx)'.
            Supports specific field query of topics: topic.field name. If no specified feild name, value will be queried by default
          items:
            type: string
            description: >-
              Queried field expression list, e.g.: topic alias 'SAxxx' or aggregation function 'first(SBxxx)'
              Supports specific field query of topics: topic.field name
        where:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
            description: Filter conditions
          description: Filter conditions
      description: Get request parameter object
    ResultVOTemplateVo:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: Status code. 200 success, others--failed
        msg:
          type: string
          description: Message
        data:
          $ref: '#/components/schemas/TemplateVo'
          description: Return data
    TemplateVo:
      type: object
      properties:
        id:
          type: integer
          description: Template ID
          format: int64
        name:
          type: string
          description: Template name
        alias:
          type: string
          description: Alias
        definition:
          type: array
          description: Field definition
          items:
            $ref: '#/components/schemas/FieldDefine'
        createTime:
          type: integer
          description: Creation time(ms)
          format: int64
        description:
          type: string
          description: Model description
    ResultVOSysModuleDto:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: '#/components/schemas/SysModuleDto'
    SysModuleDto:
      type: object
      properties:
        moduleCode:
          type: string
          description: Module code
        moduleName:
          type: string
          description: Module name
    InstanceDetail:
      type: object
      properties:
        id:
          type: string
          description: Topic ID
        name:
          type: string
          description: Topic name
        displayName:
          type: string
          description: Display name
        alias:
          type: string
          description: Alias
        parentAlias:
          type: string
          description: Parent alias
        path:
          type: string
          description: Full path
        dataType:
          type: integer
          description: 1--time series, 2--relational, 3--computed, 6--aggregated 7--reference
          format: int32
        pathType:
          type: integer
          description: Topic type. 0--path, 2--topic
          format: int32
        definition:
          type: array
          description: Field definition
          items:
            $ref: '#/components/schemas/FieldDefine'
        description:
          type: string
          description: Description
        persistence:
          type: boolean
          description: Whether to store history
        expression:
          type: string
          description: Expression. E.g."$\"1968194499044282368\".actualRuntime#", "1968194499044282368" is the referenced topic ID
        frequency:
          type: string
          description: >-
            Aggregation frequency. The calculation interval for aggregation type(dataType=6). Unit: Second/minute/hour. E.g. 3m
        showExpression:
          type: string
          description: Expression for display. E.g."$\"Equipment/CNC\".actualRuntime#", "Equipment/CNC" is the referenced topic
        refers:
          type: array
          description: Reference objects
          items:
            $ref: '#/components/schemas/refres'
        pathName:
          type: string
          description: Topic path name
        templateAlias:
          type: string
          description: Referenced template alias
        extendProperties:
          type: object
          additionalProperties:
            type: object
            description: Extended field JSON
          description: Extended properties
          properties: {}
        updateTime:
          type: integer
          description: Update time(ms)
          format: int64
        createTime:
          type: integer
          description: Creation time(ms)
          format: int64
      required:
        - frequency
    refres:
      type: object
      properties:
        alias:
          type: string
          description: Referenced topic alias
        field:
          type: string
          description: Referenced field
        uts:
          type: boolean
          description: Whether to reference topic quality code and timestamp, valid when the topic type is calculation(dataType=3). Default is false
    fileVoDetail2:
      type: object
      properties:
        id:
          type: string
          description: ID
        name:
          type: string
          description: Name
          minLength: 1
          maxLength: 63
        displayName:
          type: string
          description: Display name
          maxLength: 128
        alias:
          type: string
          description: Alias
        parentAlias:
          type: string
          description: Parent alias
        path:
          type: string
          description: Full path
        pathName:
          type: string
          description: Path name
        description:
          type: string
          description: Model description
        definition:
          type: array
          description: Field definition
          items:
            $ref: '#/components/schemas/FieldDefine'
        extendProperties:
          type: object
          additionalProperties:
            type: object
            description: Extended field JSON
          description: Extended attributes
          properties: {}
        templateAlias:
          type: string
          description: Associated template alias
        updateTime:
          type: integer
          description: Update time(ms)
          format: int64
        createTime:
          type: integer
          description: Creation time(ms)
          format: int64
    User details:
      type: object
      properties:
        username:
          type: string
          description: Username. English + numbers. 3-20 characters
          minLength: 3
          maxLength: 200
          pattern: ^[\u4e00-\u9fa5a-zA-Z0-9_\-.@&+]*$
        displayName:
          type: string
          description: Display name
        email:
          type: string
          description: Email
          example: xxx@supos.com
        phone:
          type: string
          description: Phone number
        enable:
          type: boolean
          description: Whether it is enabled
        roleList:
          type: array
          items:
            type: object
            properties:
              roleId:
                type: string
                description: Role ID
              roleName:
                type: string
                description: Role name
            required:
              - roleName
              - roleId
          description: Role list
      required:
        - username
        - roleList
        - displayName
        - enable
  securitySchemes:
    apikey-header-apikey:
      type: apiKey
      in: header
      name: apikey
servers: []
security: []
